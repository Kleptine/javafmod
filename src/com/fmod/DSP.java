/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.fmod;

public class DSP {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected DSP(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DSP obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javafmodJNI.delete_DSP(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

	/** This constructor creates the proxy which initially does not create nor own any C memory */
	public DSP() {
		this(0, false);
	}

  public FMOD_RESULT release() {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_release(swigCPtr, this));
  }

  public FMOD_RESULT getSystemObject(FMOD_System system) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getSystemObject(swigCPtr, this, system));
  }

  public FMOD_RESULT addInput(DSP input, DSPConnection connection, FMOD_DSPCONNECTION_TYPE type) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_addInput__SWIG_0(swigCPtr, this, DSP.getCPtr(input), input, connection, type.swigValue()));
  }

  public FMOD_RESULT addInput(DSP input, DSPConnection connection) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_addInput__SWIG_1(swigCPtr, this, DSP.getCPtr(input), input, connection));
  }

  public FMOD_RESULT addInput(DSP input) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_addInput__SWIG_2(swigCPtr, this, DSP.getCPtr(input), input));
  }

  public FMOD_RESULT disconnectFrom(DSP target, DSPConnection connection) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_disconnectFrom__SWIG_0(swigCPtr, this, DSP.getCPtr(target), target, DSPConnection.getCPtr(connection), connection));
  }

  public FMOD_RESULT disconnectFrom(DSP target) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_disconnectFrom__SWIG_1(swigCPtr, this, DSP.getCPtr(target), target));
  }

  public FMOD_RESULT disconnectAll(boolean inputs, boolean outputs) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_disconnectAll(swigCPtr, this, inputs, outputs));
  }

  public FMOD_RESULT getNumInputs(SWIGTYPE_p_int numinputs) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getNumInputs(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numinputs)));
  }

  public FMOD_RESULT getNumOutputs(SWIGTYPE_p_int numoutputs) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getNumOutputs(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numoutputs)));
  }

  public FMOD_RESULT getInput(int index, DSP input, DSPConnection inputconnection) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getInput(swigCPtr, this, index, input, inputconnection));
  }

  public FMOD_RESULT getOutput(int index, DSP output, DSPConnection outputconnection) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getOutput(swigCPtr, this, index, output, outputconnection));
  }

  public FMOD_RESULT setActive(boolean active) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setActive(swigCPtr, this, active));
  }

  public FMOD_RESULT getActive(SWIGTYPE_p_bool active) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getActive(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(active)));
  }

  public FMOD_RESULT setBypass(boolean bypass) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setBypass(swigCPtr, this, bypass));
  }

  public FMOD_RESULT getBypass(SWIGTYPE_p_bool bypass) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getBypass(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(bypass)));
  }

  public FMOD_RESULT setWetDryMix(float prewet, float postwet, float dry) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setWetDryMix(swigCPtr, this, prewet, postwet, dry));
  }

  public FMOD_RESULT getWetDryMix(SWIGTYPE_p_float prewet, SWIGTYPE_p_float postwet, SWIGTYPE_p_float dry) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getWetDryMix(swigCPtr, this, SWIGTYPE_p_float.getCPtr(prewet), SWIGTYPE_p_float.getCPtr(postwet), SWIGTYPE_p_float.getCPtr(dry)));
  }

  public FMOD_RESULT setChannelFormat(long channelmask, int numchannels, FMOD_SPEAKERMODE source_speakermode) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setChannelFormat(swigCPtr, this, channelmask, numchannels, source_speakermode.swigValue()));
  }

  public FMOD_RESULT getChannelFormat(SWIGTYPE_p_unsigned_int channelmask, SWIGTYPE_p_int numchannels, SWIGTYPE_p_FMOD_SPEAKERMODE source_speakermode) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getChannelFormat(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(channelmask), SWIGTYPE_p_int.getCPtr(numchannels), SWIGTYPE_p_FMOD_SPEAKERMODE.getCPtr(source_speakermode)));
  }

  public FMOD_RESULT getOutputChannelFormat(long inmask, int inchannels, FMOD_SPEAKERMODE inspeakermode, SWIGTYPE_p_unsigned_int outmask, SWIGTYPE_p_int outchannels, SWIGTYPE_p_FMOD_SPEAKERMODE outspeakermode) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getOutputChannelFormat(swigCPtr, this, inmask, inchannels, inspeakermode.swigValue(), SWIGTYPE_p_unsigned_int.getCPtr(outmask), SWIGTYPE_p_int.getCPtr(outchannels), SWIGTYPE_p_FMOD_SPEAKERMODE.getCPtr(outspeakermode)));
  }

  public FMOD_RESULT reset() {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_reset(swigCPtr, this));
  }

  public FMOD_RESULT setParameterFloat(int index, float value) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setParameterFloat(swigCPtr, this, index, value));
  }

  public FMOD_RESULT setParameterInt(int index, int value) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setParameterInt(swigCPtr, this, index, value));
  }

  public FMOD_RESULT setParameterBool(int index, boolean value) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setParameterBool(swigCPtr, this, index, value));
  }

  public FMOD_RESULT setParameterData(int index, SWIGTYPE_p_void data, long length) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setParameterData(swigCPtr, this, index, SWIGTYPE_p_void.getCPtr(data), length));
  }

  public FMOD_RESULT getParameterFloat(int index, SWIGTYPE_p_float value, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getParameterFloat(swigCPtr, this, index, SWIGTYPE_p_float.getCPtr(value), valuestr, valuestrlen));
  }

  public FMOD_RESULT getParameterInt(int index, SWIGTYPE_p_int value, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getParameterInt(swigCPtr, this, index, SWIGTYPE_p_int.getCPtr(value), valuestr, valuestrlen));
  }

  public FMOD_RESULT getParameterBool(int index, SWIGTYPE_p_bool value, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getParameterBool(swigCPtr, this, index, SWIGTYPE_p_bool.getCPtr(value), valuestr, valuestrlen));
  }

  public FMOD_RESULT getParameterData(int index, SWIGTYPE_p_p_void data, SWIGTYPE_p_unsigned_int length, String valuestr, int valuestrlen) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getParameterData(swigCPtr, this, index, SWIGTYPE_p_p_void.getCPtr(data), SWIGTYPE_p_unsigned_int.getCPtr(length), valuestr, valuestrlen));
  }

  public FMOD_RESULT getNumParameters(SWIGTYPE_p_int numparams) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getNumParameters(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numparams)));
  }

  public FMOD_RESULT getParameterInfo(int index, SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC desc) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getParameterInfo(swigCPtr, this, index, SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC.getCPtr(desc)));
  }

  public FMOD_RESULT getDataParameterIndex(int datatype, SWIGTYPE_p_int index) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getDataParameterIndex(swigCPtr, this, datatype, SWIGTYPE_p_int.getCPtr(index)));
  }

  public FMOD_RESULT showConfigDialog(SWIGTYPE_p_void hwnd, boolean show) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_showConfigDialog(swigCPtr, this, SWIGTYPE_p_void.getCPtr(hwnd), show));
  }

  public FMOD_RESULT getInfo(String name, SWIGTYPE_p_unsigned_int version, SWIGTYPE_p_int channels, SWIGTYPE_p_int configwidth, SWIGTYPE_p_int configheight) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getInfo(swigCPtr, this, name, SWIGTYPE_p_unsigned_int.getCPtr(version), SWIGTYPE_p_int.getCPtr(channels), SWIGTYPE_p_int.getCPtr(configwidth), SWIGTYPE_p_int.getCPtr(configheight)));
  }

  public FMOD_RESULT getType(SWIGTYPE_p_FMOD_DSP_TYPE type) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getType(swigCPtr, this, SWIGTYPE_p_FMOD_DSP_TYPE.getCPtr(type)));
  }

  public FMOD_RESULT getIdle(SWIGTYPE_p_bool idle) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getIdle(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(idle)));
  }

  public FMOD_RESULT setUserData(SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setUserData(swigCPtr, this, SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public FMOD_RESULT getUserData(SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getUserData(swigCPtr, this, SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

  public FMOD_RESULT setMeteringEnabled(boolean inputEnabled, boolean outputEnabled) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_setMeteringEnabled(swigCPtr, this, inputEnabled, outputEnabled));
  }

  public FMOD_RESULT getMeteringEnabled(SWIGTYPE_p_bool inputEnabled, SWIGTYPE_p_bool outputEnabled) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getMeteringEnabled(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(inputEnabled), SWIGTYPE_p_bool.getCPtr(outputEnabled)));
  }

  public FMOD_RESULT getMeteringInfo(SWIGTYPE_p_FMOD_DSP_METERING_INFO inputInfo, SWIGTYPE_p_FMOD_DSP_METERING_INFO outputInfo) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSP_getMeteringInfo(swigCPtr, this, SWIGTYPE_p_FMOD_DSP_METERING_INFO.getCPtr(inputInfo), SWIGTYPE_p_FMOD_DSP_METERING_INFO.getCPtr(outputInfo)));
  }

}
