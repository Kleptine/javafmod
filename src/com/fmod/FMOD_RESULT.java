/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.fmod;

public final class FMOD_RESULT {
  public final static FMOD_RESULT FMOD_OK = new FMOD_RESULT("FMOD_OK");
  public final static FMOD_RESULT FMOD_ERR_BADCOMMAND = new FMOD_RESULT("FMOD_ERR_BADCOMMAND");
  public final static FMOD_RESULT FMOD_ERR_CHANNEL_ALLOC = new FMOD_RESULT("FMOD_ERR_CHANNEL_ALLOC");
  public final static FMOD_RESULT FMOD_ERR_CHANNEL_STOLEN = new FMOD_RESULT("FMOD_ERR_CHANNEL_STOLEN");
  public final static FMOD_RESULT FMOD_ERR_DMA = new FMOD_RESULT("FMOD_ERR_DMA");
  public final static FMOD_RESULT FMOD_ERR_DSP_CONNECTION = new FMOD_RESULT("FMOD_ERR_DSP_CONNECTION");
  public final static FMOD_RESULT FMOD_ERR_DSP_DONTPROCESS = new FMOD_RESULT("FMOD_ERR_DSP_DONTPROCESS");
  public final static FMOD_RESULT FMOD_ERR_DSP_FORMAT = new FMOD_RESULT("FMOD_ERR_DSP_FORMAT");
  public final static FMOD_RESULT FMOD_ERR_DSP_INUSE = new FMOD_RESULT("FMOD_ERR_DSP_INUSE");
  public final static FMOD_RESULT FMOD_ERR_DSP_NOTFOUND = new FMOD_RESULT("FMOD_ERR_DSP_NOTFOUND");
  public final static FMOD_RESULT FMOD_ERR_DSP_RESERVED = new FMOD_RESULT("FMOD_ERR_DSP_RESERVED");
  public final static FMOD_RESULT FMOD_ERR_DSP_SILENCE = new FMOD_RESULT("FMOD_ERR_DSP_SILENCE");
  public final static FMOD_RESULT FMOD_ERR_DSP_TYPE = new FMOD_RESULT("FMOD_ERR_DSP_TYPE");
  public final static FMOD_RESULT FMOD_ERR_FILE_BAD = new FMOD_RESULT("FMOD_ERR_FILE_BAD");
  public final static FMOD_RESULT FMOD_ERR_FILE_COULDNOTSEEK = new FMOD_RESULT("FMOD_ERR_FILE_COULDNOTSEEK");
  public final static FMOD_RESULT FMOD_ERR_FILE_DISKEJECTED = new FMOD_RESULT("FMOD_ERR_FILE_DISKEJECTED");
  public final static FMOD_RESULT FMOD_ERR_FILE_EOF = new FMOD_RESULT("FMOD_ERR_FILE_EOF");
  public final static FMOD_RESULT FMOD_ERR_FILE_ENDOFDATA = new FMOD_RESULT("FMOD_ERR_FILE_ENDOFDATA");
  public final static FMOD_RESULT FMOD_ERR_FILE_NOTFOUND = new FMOD_RESULT("FMOD_ERR_FILE_NOTFOUND");
  public final static FMOD_RESULT FMOD_ERR_FORMAT = new FMOD_RESULT("FMOD_ERR_FORMAT");
  public final static FMOD_RESULT FMOD_ERR_HEADER_MISMATCH = new FMOD_RESULT("FMOD_ERR_HEADER_MISMATCH");
  public final static FMOD_RESULT FMOD_ERR_HTTP = new FMOD_RESULT("FMOD_ERR_HTTP");
  public final static FMOD_RESULT FMOD_ERR_HTTP_ACCESS = new FMOD_RESULT("FMOD_ERR_HTTP_ACCESS");
  public final static FMOD_RESULT FMOD_ERR_HTTP_PROXY_AUTH = new FMOD_RESULT("FMOD_ERR_HTTP_PROXY_AUTH");
  public final static FMOD_RESULT FMOD_ERR_HTTP_SERVER_ERROR = new FMOD_RESULT("FMOD_ERR_HTTP_SERVER_ERROR");
  public final static FMOD_RESULT FMOD_ERR_HTTP_TIMEOUT = new FMOD_RESULT("FMOD_ERR_HTTP_TIMEOUT");
  public final static FMOD_RESULT FMOD_ERR_INITIALIZATION = new FMOD_RESULT("FMOD_ERR_INITIALIZATION");
  public final static FMOD_RESULT FMOD_ERR_INITIALIZED = new FMOD_RESULT("FMOD_ERR_INITIALIZED");
  public final static FMOD_RESULT FMOD_ERR_INTERNAL = new FMOD_RESULT("FMOD_ERR_INTERNAL");
  public final static FMOD_RESULT FMOD_ERR_INVALID_FLOAT = new FMOD_RESULT("FMOD_ERR_INVALID_FLOAT");
  public final static FMOD_RESULT FMOD_ERR_INVALID_HANDLE = new FMOD_RESULT("FMOD_ERR_INVALID_HANDLE");
  public final static FMOD_RESULT FMOD_ERR_INVALID_PARAM = new FMOD_RESULT("FMOD_ERR_INVALID_PARAM");
  public final static FMOD_RESULT FMOD_ERR_INVALID_POSITION = new FMOD_RESULT("FMOD_ERR_INVALID_POSITION");
  public final static FMOD_RESULT FMOD_ERR_INVALID_SPEAKER = new FMOD_RESULT("FMOD_ERR_INVALID_SPEAKER");
  public final static FMOD_RESULT FMOD_ERR_INVALID_SYNCPOINT = new FMOD_RESULT("FMOD_ERR_INVALID_SYNCPOINT");
  public final static FMOD_RESULT FMOD_ERR_INVALID_THREAD = new FMOD_RESULT("FMOD_ERR_INVALID_THREAD");
  public final static FMOD_RESULT FMOD_ERR_INVALID_VECTOR = new FMOD_RESULT("FMOD_ERR_INVALID_VECTOR");
  public final static FMOD_RESULT FMOD_ERR_MAXAUDIBLE = new FMOD_RESULT("FMOD_ERR_MAXAUDIBLE");
  public final static FMOD_RESULT FMOD_ERR_MEMORY = new FMOD_RESULT("FMOD_ERR_MEMORY");
  public final static FMOD_RESULT FMOD_ERR_MEMORY_CANTPOINT = new FMOD_RESULT("FMOD_ERR_MEMORY_CANTPOINT");
  public final static FMOD_RESULT FMOD_ERR_NEEDS3D = new FMOD_RESULT("FMOD_ERR_NEEDS3D");
  public final static FMOD_RESULT FMOD_ERR_NEEDSHARDWARE = new FMOD_RESULT("FMOD_ERR_NEEDSHARDWARE");
  public final static FMOD_RESULT FMOD_ERR_NET_CONNECT = new FMOD_RESULT("FMOD_ERR_NET_CONNECT");
  public final static FMOD_RESULT FMOD_ERR_NET_SOCKET_ERROR = new FMOD_RESULT("FMOD_ERR_NET_SOCKET_ERROR");
  public final static FMOD_RESULT FMOD_ERR_NET_URL = new FMOD_RESULT("FMOD_ERR_NET_URL");
  public final static FMOD_RESULT FMOD_ERR_NET_WOULD_BLOCK = new FMOD_RESULT("FMOD_ERR_NET_WOULD_BLOCK");
  public final static FMOD_RESULT FMOD_ERR_NOTREADY = new FMOD_RESULT("FMOD_ERR_NOTREADY");
  public final static FMOD_RESULT FMOD_ERR_OUTPUT_ALLOCATED = new FMOD_RESULT("FMOD_ERR_OUTPUT_ALLOCATED");
  public final static FMOD_RESULT FMOD_ERR_OUTPUT_CREATEBUFFER = new FMOD_RESULT("FMOD_ERR_OUTPUT_CREATEBUFFER");
  public final static FMOD_RESULT FMOD_ERR_OUTPUT_DRIVERCALL = new FMOD_RESULT("FMOD_ERR_OUTPUT_DRIVERCALL");
  public final static FMOD_RESULT FMOD_ERR_OUTPUT_FORMAT = new FMOD_RESULT("FMOD_ERR_OUTPUT_FORMAT");
  public final static FMOD_RESULT FMOD_ERR_OUTPUT_INIT = new FMOD_RESULT("FMOD_ERR_OUTPUT_INIT");
  public final static FMOD_RESULT FMOD_ERR_OUTPUT_NODRIVERS = new FMOD_RESULT("FMOD_ERR_OUTPUT_NODRIVERS");
  public final static FMOD_RESULT FMOD_ERR_PLUGIN = new FMOD_RESULT("FMOD_ERR_PLUGIN");
  public final static FMOD_RESULT FMOD_ERR_PLUGIN_MISSING = new FMOD_RESULT("FMOD_ERR_PLUGIN_MISSING");
  public final static FMOD_RESULT FMOD_ERR_PLUGIN_RESOURCE = new FMOD_RESULT("FMOD_ERR_PLUGIN_RESOURCE");
  public final static FMOD_RESULT FMOD_ERR_PLUGIN_VERSION = new FMOD_RESULT("FMOD_ERR_PLUGIN_VERSION");
  public final static FMOD_RESULT FMOD_ERR_RECORD = new FMOD_RESULT("FMOD_ERR_RECORD");
  public final static FMOD_RESULT FMOD_ERR_REVERB_CHANNELGROUP = new FMOD_RESULT("FMOD_ERR_REVERB_CHANNELGROUP");
  public final static FMOD_RESULT FMOD_ERR_REVERB_INSTANCE = new FMOD_RESULT("FMOD_ERR_REVERB_INSTANCE");
  public final static FMOD_RESULT FMOD_ERR_SUBSOUNDS = new FMOD_RESULT("FMOD_ERR_SUBSOUNDS");
  public final static FMOD_RESULT FMOD_ERR_SUBSOUND_ALLOCATED = new FMOD_RESULT("FMOD_ERR_SUBSOUND_ALLOCATED");
  public final static FMOD_RESULT FMOD_ERR_SUBSOUND_CANTMOVE = new FMOD_RESULT("FMOD_ERR_SUBSOUND_CANTMOVE");
  public final static FMOD_RESULT FMOD_ERR_TAGNOTFOUND = new FMOD_RESULT("FMOD_ERR_TAGNOTFOUND");
  public final static FMOD_RESULT FMOD_ERR_TOOMANYCHANNELS = new FMOD_RESULT("FMOD_ERR_TOOMANYCHANNELS");
  public final static FMOD_RESULT FMOD_ERR_TRUNCATED = new FMOD_RESULT("FMOD_ERR_TRUNCATED");
  public final static FMOD_RESULT FMOD_ERR_UNIMPLEMENTED = new FMOD_RESULT("FMOD_ERR_UNIMPLEMENTED");
  public final static FMOD_RESULT FMOD_ERR_UNINITIALIZED = new FMOD_RESULT("FMOD_ERR_UNINITIALIZED");
  public final static FMOD_RESULT FMOD_ERR_UNSUPPORTED = new FMOD_RESULT("FMOD_ERR_UNSUPPORTED");
  public final static FMOD_RESULT FMOD_ERR_VERSION = new FMOD_RESULT("FMOD_ERR_VERSION");
  public final static FMOD_RESULT FMOD_ERR_EVENT_ALREADY_LOADED = new FMOD_RESULT("FMOD_ERR_EVENT_ALREADY_LOADED");
  public final static FMOD_RESULT FMOD_ERR_EVENT_LIVEUPDATE_BUSY = new FMOD_RESULT("FMOD_ERR_EVENT_LIVEUPDATE_BUSY");
  public final static FMOD_RESULT FMOD_ERR_EVENT_LIVEUPDATE_MISMATCH = new FMOD_RESULT("FMOD_ERR_EVENT_LIVEUPDATE_MISMATCH");
  public final static FMOD_RESULT FMOD_ERR_EVENT_LIVEUPDATE_TIMEOUT = new FMOD_RESULT("FMOD_ERR_EVENT_LIVEUPDATE_TIMEOUT");
  public final static FMOD_RESULT FMOD_ERR_EVENT_NOTFOUND = new FMOD_RESULT("FMOD_ERR_EVENT_NOTFOUND");
  public final static FMOD_RESULT FMOD_ERR_STUDIO_UNINITIALIZED = new FMOD_RESULT("FMOD_ERR_STUDIO_UNINITIALIZED");
  public final static FMOD_RESULT FMOD_ERR_STUDIO_NOT_LOADED = new FMOD_RESULT("FMOD_ERR_STUDIO_NOT_LOADED");
  public final static FMOD_RESULT FMOD_ERR_INVALID_STRING = new FMOD_RESULT("FMOD_ERR_INVALID_STRING");
  public final static FMOD_RESULT FMOD_ERR_ALREADY_LOCKED = new FMOD_RESULT("FMOD_ERR_ALREADY_LOCKED");
  public final static FMOD_RESULT FMOD_ERR_NOT_LOCKED = new FMOD_RESULT("FMOD_ERR_NOT_LOCKED");
  public final static FMOD_RESULT FMOD_RESULT_FORCEINT = new FMOD_RESULT("FMOD_RESULT_FORCEINT", javafmodJNI.FMOD_RESULT_FORCEINT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static FMOD_RESULT swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + FMOD_RESULT.class + " with value " + swigValue);
  }

  private FMOD_RESULT(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private FMOD_RESULT(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private FMOD_RESULT(String swigName, FMOD_RESULT swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static FMOD_RESULT[] swigValues = { FMOD_OK, FMOD_ERR_BADCOMMAND, FMOD_ERR_CHANNEL_ALLOC, FMOD_ERR_CHANNEL_STOLEN, FMOD_ERR_DMA, FMOD_ERR_DSP_CONNECTION, FMOD_ERR_DSP_DONTPROCESS, FMOD_ERR_DSP_FORMAT, FMOD_ERR_DSP_INUSE, FMOD_ERR_DSP_NOTFOUND, FMOD_ERR_DSP_RESERVED, FMOD_ERR_DSP_SILENCE, FMOD_ERR_DSP_TYPE, FMOD_ERR_FILE_BAD, FMOD_ERR_FILE_COULDNOTSEEK, FMOD_ERR_FILE_DISKEJECTED, FMOD_ERR_FILE_EOF, FMOD_ERR_FILE_ENDOFDATA, FMOD_ERR_FILE_NOTFOUND, FMOD_ERR_FORMAT, FMOD_ERR_HEADER_MISMATCH, FMOD_ERR_HTTP, FMOD_ERR_HTTP_ACCESS, FMOD_ERR_HTTP_PROXY_AUTH, FMOD_ERR_HTTP_SERVER_ERROR, FMOD_ERR_HTTP_TIMEOUT, FMOD_ERR_INITIALIZATION, FMOD_ERR_INITIALIZED, FMOD_ERR_INTERNAL, FMOD_ERR_INVALID_FLOAT, FMOD_ERR_INVALID_HANDLE, FMOD_ERR_INVALID_PARAM, FMOD_ERR_INVALID_POSITION, FMOD_ERR_INVALID_SPEAKER, FMOD_ERR_INVALID_SYNCPOINT, FMOD_ERR_INVALID_THREAD, FMOD_ERR_INVALID_VECTOR, FMOD_ERR_MAXAUDIBLE, FMOD_ERR_MEMORY, FMOD_ERR_MEMORY_CANTPOINT, FMOD_ERR_NEEDS3D, FMOD_ERR_NEEDSHARDWARE, FMOD_ERR_NET_CONNECT, FMOD_ERR_NET_SOCKET_ERROR, FMOD_ERR_NET_URL, FMOD_ERR_NET_WOULD_BLOCK, FMOD_ERR_NOTREADY, FMOD_ERR_OUTPUT_ALLOCATED, FMOD_ERR_OUTPUT_CREATEBUFFER, FMOD_ERR_OUTPUT_DRIVERCALL, FMOD_ERR_OUTPUT_FORMAT, FMOD_ERR_OUTPUT_INIT, FMOD_ERR_OUTPUT_NODRIVERS, FMOD_ERR_PLUGIN, FMOD_ERR_PLUGIN_MISSING, FMOD_ERR_PLUGIN_RESOURCE, FMOD_ERR_PLUGIN_VERSION, FMOD_ERR_RECORD, FMOD_ERR_REVERB_CHANNELGROUP, FMOD_ERR_REVERB_INSTANCE, FMOD_ERR_SUBSOUNDS, FMOD_ERR_SUBSOUND_ALLOCATED, FMOD_ERR_SUBSOUND_CANTMOVE, FMOD_ERR_TAGNOTFOUND, FMOD_ERR_TOOMANYCHANNELS, FMOD_ERR_TRUNCATED, FMOD_ERR_UNIMPLEMENTED, FMOD_ERR_UNINITIALIZED, FMOD_ERR_UNSUPPORTED, FMOD_ERR_VERSION, FMOD_ERR_EVENT_ALREADY_LOADED, FMOD_ERR_EVENT_LIVEUPDATE_BUSY, FMOD_ERR_EVENT_LIVEUPDATE_MISMATCH, FMOD_ERR_EVENT_LIVEUPDATE_TIMEOUT, FMOD_ERR_EVENT_NOTFOUND, FMOD_ERR_STUDIO_UNINITIALIZED, FMOD_ERR_STUDIO_NOT_LOADED, FMOD_ERR_INVALID_STRING, FMOD_ERR_ALREADY_LOCKED, FMOD_ERR_NOT_LOCKED, FMOD_RESULT_FORCEINT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

