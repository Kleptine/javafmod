/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.fmod;

public class DSPConnection {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected DSPConnection(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DSPConnection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javafmodJNI.delete_DSPConnection(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

	/** This constructor creates the proxy which initially does not create nor own any C memory */
	public DSPConnection() {
		this(0, false);
	}

  public FMOD_RESULT getInput(DSP input) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_getInput(swigCPtr, this, input));
  }

  public FMOD_RESULT getOutput(DSP output) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_getOutput(swigCPtr, this, output));
  }

  public FMOD_RESULT setMix(float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_setMix(swigCPtr, this, volume));
  }

  public FMOD_RESULT getMix(SWIGTYPE_p_float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_getMix(swigCPtr, this, SWIGTYPE_p_float.getCPtr(volume)));
  }

  public FMOD_RESULT setMixMatrix(SWIGTYPE_p_float matrix, int outchannels, int inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_setMixMatrix__SWIG_0(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), outchannels, inchannels, inchannel_hop));
  }

  public FMOD_RESULT setMixMatrix(SWIGTYPE_p_float matrix, int outchannels, int inchannels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_setMixMatrix__SWIG_1(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), outchannels, inchannels));
  }

  public FMOD_RESULT getMixMatrix(SWIGTYPE_p_float matrix, SWIGTYPE_p_int outchannels, SWIGTYPE_p_int inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_getMixMatrix__SWIG_0(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_int.getCPtr(outchannels), SWIGTYPE_p_int.getCPtr(inchannels), inchannel_hop));
  }

  public FMOD_RESULT getMixMatrix(SWIGTYPE_p_float matrix, SWIGTYPE_p_int outchannels, SWIGTYPE_p_int inchannels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_getMixMatrix__SWIG_1(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_int.getCPtr(outchannels), SWIGTYPE_p_int.getCPtr(inchannels)));
  }

  public FMOD_RESULT getType(SWIGTYPE_p_FMOD_DSPCONNECTION_TYPE type) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_getType(swigCPtr, this, SWIGTYPE_p_FMOD_DSPCONNECTION_TYPE.getCPtr(type)));
  }

  public FMOD_RESULT setUserData(SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_setUserData(swigCPtr, this, SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public FMOD_RESULT getUserData(SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.DSPConnection_getUserData(swigCPtr, this, SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

}
