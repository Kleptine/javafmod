/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.fmod;

public final class FMOD_TAGDATATYPE {
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_BINARY = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_BINARY", javafmodJNI.FMOD_TAGDATATYPE_BINARY_get());
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_INT = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_INT");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_FLOAT = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_FLOAT");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_STRING = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_STRING");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_STRING_UTF16 = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_STRING_UTF16");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_STRING_UTF16BE = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_STRING_UTF16BE");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_STRING_UTF8 = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_STRING_UTF8");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_CDTOC = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_CDTOC");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_MAX = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_MAX");
  public final static FMOD_TAGDATATYPE FMOD_TAGDATATYPE_FORCEINT = new FMOD_TAGDATATYPE("FMOD_TAGDATATYPE_FORCEINT", javafmodJNI.FMOD_TAGDATATYPE_FORCEINT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static FMOD_TAGDATATYPE swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + FMOD_TAGDATATYPE.class + " with value " + swigValue);
  }

  private FMOD_TAGDATATYPE(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private FMOD_TAGDATATYPE(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private FMOD_TAGDATATYPE(String swigName, FMOD_TAGDATATYPE swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static FMOD_TAGDATATYPE[] swigValues = { FMOD_TAGDATATYPE_BINARY, FMOD_TAGDATATYPE_INT, FMOD_TAGDATATYPE_FLOAT, FMOD_TAGDATATYPE_STRING, FMOD_TAGDATATYPE_STRING_UTF16, FMOD_TAGDATATYPE_STRING_UTF16BE, FMOD_TAGDATATYPE_STRING_UTF8, FMOD_TAGDATATYPE_CDTOC, FMOD_TAGDATATYPE_MAX, FMOD_TAGDATATYPE_FORCEINT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

