/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.fmod;

public class ChannelControl {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ChannelControl(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ChannelControl obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javafmodJNI.delete_ChannelControl(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public FMOD_RESULT getSystemObject(FMOD_System system) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getSystemObject(swigCPtr, this, system));
  }

  public FMOD_RESULT stop() {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_stop(swigCPtr, this));
  }

  public FMOD_RESULT setPaused(boolean paused) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setPaused(swigCPtr, this, paused));
  }

  public FMOD_RESULT getPaused(SWIGTYPE_p_bool paused) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getPaused(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(paused)));
  }

  public FMOD_RESULT setVolume(float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setVolume(swigCPtr, this, volume));
  }

  public FMOD_RESULT getVolume(SWIGTYPE_p_float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getVolume(swigCPtr, this, SWIGTYPE_p_float.getCPtr(volume)));
  }

  public FMOD_RESULT setVolumeRamp(boolean ramp) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setVolumeRamp(swigCPtr, this, ramp));
  }

  public FMOD_RESULT getVolumeRamp(SWIGTYPE_p_bool ramp) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getVolumeRamp(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(ramp)));
  }

  public FMOD_RESULT getAudibility(SWIGTYPE_p_float audibility) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getAudibility(swigCPtr, this, SWIGTYPE_p_float.getCPtr(audibility)));
  }

  public FMOD_RESULT setPitch(float pitch) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setPitch(swigCPtr, this, pitch));
  }

  public FMOD_RESULT getPitch(SWIGTYPE_p_float pitch) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getPitch(swigCPtr, this, SWIGTYPE_p_float.getCPtr(pitch)));
  }

  public FMOD_RESULT setMute(boolean mute) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setMute(swigCPtr, this, mute));
  }

  public FMOD_RESULT getMute(SWIGTYPE_p_bool mute) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getMute(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(mute)));
  }

  public FMOD_RESULT setReverbProperties(int instance, float wet) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setReverbProperties(swigCPtr, this, instance, wet));
  }

  public FMOD_RESULT getReverbProperties(int instance, SWIGTYPE_p_float wet) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getReverbProperties(swigCPtr, this, instance, SWIGTYPE_p_float.getCPtr(wet)));
  }

  public FMOD_RESULT setLowPassGain(float gain) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setLowPassGain(swigCPtr, this, gain));
  }

  public FMOD_RESULT getLowPassGain(SWIGTYPE_p_float gain) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getLowPassGain(swigCPtr, this, SWIGTYPE_p_float.getCPtr(gain)));
  }

  public FMOD_RESULT setMode(long mode) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setMode(swigCPtr, this, mode));
  }

  public FMOD_RESULT getMode(SWIGTYPE_p_unsigned_int mode) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getMode(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(mode)));
  }

  public FMOD_RESULT setCallback(SWIGTYPE_p_f_p_FMOD_CHANNELCONTROL_enum_FMOD_CHANNELCONTROL_TYPE_enum_FMOD_CHANNELCONTROL_CALLBACK_TYPE_p_void_p_void__FMOD_RESULT callback) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setCallback(swigCPtr, this, SWIGTYPE_p_f_p_FMOD_CHANNELCONTROL_enum_FMOD_CHANNELCONTROL_TYPE_enum_FMOD_CHANNELCONTROL_CALLBACK_TYPE_p_void_p_void__FMOD_RESULT.getCPtr(callback)));
  }

  public FMOD_RESULT isPlaying(SWIGTYPE_p_bool isplaying) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_isPlaying(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(isplaying)));
  }

  public FMOD_RESULT setPan(float pan) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setPan(swigCPtr, this, pan));
  }

  public FMOD_RESULT setMixLevelsOutput(float frontleft, float frontright, float center, float lfe, float surroundleft, float surroundright, float backleft, float backright) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setMixLevelsOutput(swigCPtr, this, frontleft, frontright, center, lfe, surroundleft, surroundright, backleft, backright));
  }

  public FMOD_RESULT setMixLevelsInput(SWIGTYPE_p_float levels, int numlevels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setMixLevelsInput(swigCPtr, this, SWIGTYPE_p_float.getCPtr(levels), numlevels));
  }

  public FMOD_RESULT setMixMatrix(SWIGTYPE_p_float matrix, int outchannels, int inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setMixMatrix__SWIG_0(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), outchannels, inchannels, inchannel_hop));
  }

  public FMOD_RESULT setMixMatrix(SWIGTYPE_p_float matrix, int outchannels, int inchannels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setMixMatrix__SWIG_1(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), outchannels, inchannels));
  }

  public FMOD_RESULT getMixMatrix(SWIGTYPE_p_float matrix, SWIGTYPE_p_int outchannels, SWIGTYPE_p_int inchannels, int inchannel_hop) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getMixMatrix__SWIG_0(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_int.getCPtr(outchannels), SWIGTYPE_p_int.getCPtr(inchannels), inchannel_hop));
  }

  public FMOD_RESULT getMixMatrix(SWIGTYPE_p_float matrix, SWIGTYPE_p_int outchannels, SWIGTYPE_p_int inchannels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getMixMatrix__SWIG_1(swigCPtr, this, SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_int.getCPtr(outchannels), SWIGTYPE_p_int.getCPtr(inchannels)));
  }

  public FMOD_RESULT getDSPClock(SWIGTYPE_p_unsigned_long_long dspclock, SWIGTYPE_p_unsigned_long_long parentclock) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getDSPClock(swigCPtr, this, SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock), SWIGTYPE_p_unsigned_long_long.getCPtr(parentclock)));
  }

  public FMOD_RESULT setDelay(java.math.BigInteger dspclock_start, java.math.BigInteger dspclock_end, boolean stopchannels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setDelay__SWIG_0(swigCPtr, this, dspclock_start, dspclock_end, stopchannels));
  }

  public FMOD_RESULT setDelay(java.math.BigInteger dspclock_start, java.math.BigInteger dspclock_end) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setDelay__SWIG_1(swigCPtr, this, dspclock_start, dspclock_end));
  }

  public FMOD_RESULT getDelay(SWIGTYPE_p_unsigned_long_long dspclock_start, SWIGTYPE_p_unsigned_long_long dspclock_end, SWIGTYPE_p_bool stopchannels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getDelay__SWIG_0(swigCPtr, this, SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_start), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_end), SWIGTYPE_p_bool.getCPtr(stopchannels)));
  }

  public FMOD_RESULT getDelay(SWIGTYPE_p_unsigned_long_long dspclock_start, SWIGTYPE_p_unsigned_long_long dspclock_end) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getDelay__SWIG_1(swigCPtr, this, SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_start), SWIGTYPE_p_unsigned_long_long.getCPtr(dspclock_end)));
  }

  public FMOD_RESULT addFadePoint(java.math.BigInteger dspclock, float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_addFadePoint(swigCPtr, this, dspclock, volume));
  }

  public FMOD_RESULT setFadePointRamp(java.math.BigInteger dspclock, float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setFadePointRamp(swigCPtr, this, dspclock, volume));
  }

  public FMOD_RESULT removeFadePoints(java.math.BigInteger dspclock_start, java.math.BigInteger dspclock_end) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_removeFadePoints(swigCPtr, this, dspclock_start, dspclock_end));
  }

  public FMOD_RESULT getFadePoints(SWIGTYPE_p_unsigned_int numpoints, SWIGTYPE_p_unsigned_long_long point_dspclock, SWIGTYPE_p_float point_volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getFadePoints(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(numpoints), SWIGTYPE_p_unsigned_long_long.getCPtr(point_dspclock), SWIGTYPE_p_float.getCPtr(point_volume)));
  }

  public FMOD_RESULT getDSP(int index, DSP dsp) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getDSP(swigCPtr, this, index, dsp));
  }

  public FMOD_RESULT addDSP(int index, DSP dsp) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_addDSP(swigCPtr, this, index, DSP.getCPtr(dsp), dsp));
  }

  public FMOD_RESULT removeDSP(DSP dsp) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_removeDSP(swigCPtr, this, DSP.getCPtr(dsp), dsp));
  }

  public FMOD_RESULT getNumDSPs(SWIGTYPE_p_int numdsps) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getNumDSPs(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numdsps)));
  }

  public FMOD_RESULT setDSPIndex(DSP dsp, int index) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setDSPIndex(swigCPtr, this, DSP.getCPtr(dsp), dsp, index));
  }

  public FMOD_RESULT getDSPIndex(DSP dsp, SWIGTYPE_p_int index) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getDSPIndex(swigCPtr, this, DSP.getCPtr(dsp), dsp, SWIGTYPE_p_int.getCPtr(index)));
  }

  public FMOD_RESULT overridePanDSP(DSP pan) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_overridePanDSP(swigCPtr, this, DSP.getCPtr(pan), pan));
  }

  public FMOD_RESULT set3DAttributes(FMOD_VECTOR pos, FMOD_VECTOR vel, FMOD_VECTOR alt_pan_pos) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DAttributes__SWIG_0(swigCPtr, this, FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel, FMOD_VECTOR.getCPtr(alt_pan_pos), alt_pan_pos));
  }

  public FMOD_RESULT set3DAttributes(FMOD_VECTOR pos, FMOD_VECTOR vel) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DAttributes__SWIG_1(swigCPtr, this, FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel));
  }

  public FMOD_RESULT get3DAttributes(FMOD_VECTOR pos, FMOD_VECTOR vel, FMOD_VECTOR alt_pan_pos) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DAttributes__SWIG_0(swigCPtr, this, FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel, FMOD_VECTOR.getCPtr(alt_pan_pos), alt_pan_pos));
  }

  public FMOD_RESULT get3DAttributes(FMOD_VECTOR pos, FMOD_VECTOR vel) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DAttributes__SWIG_1(swigCPtr, this, FMOD_VECTOR.getCPtr(pos), pos, FMOD_VECTOR.getCPtr(vel), vel));
  }

  public FMOD_RESULT set3DMinMaxDistance(float mindistance, float maxdistance) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DMinMaxDistance(swigCPtr, this, mindistance, maxdistance));
  }

  public FMOD_RESULT get3DMinMaxDistance(SWIGTYPE_p_float mindistance, SWIGTYPE_p_float maxdistance) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DMinMaxDistance(swigCPtr, this, SWIGTYPE_p_float.getCPtr(mindistance), SWIGTYPE_p_float.getCPtr(maxdistance)));
  }

  public FMOD_RESULT set3DConeSettings(float insideconeangle, float outsideconeangle, float outsidevolume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DConeSettings(swigCPtr, this, insideconeangle, outsideconeangle, outsidevolume));
  }

  public FMOD_RESULT get3DConeSettings(SWIGTYPE_p_float insideconeangle, SWIGTYPE_p_float outsideconeangle, SWIGTYPE_p_float outsidevolume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DConeSettings(swigCPtr, this, SWIGTYPE_p_float.getCPtr(insideconeangle), SWIGTYPE_p_float.getCPtr(outsideconeangle), SWIGTYPE_p_float.getCPtr(outsidevolume)));
  }

  public FMOD_RESULT set3DConeOrientation(FMOD_VECTOR orientation) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DConeOrientation(swigCPtr, this, FMOD_VECTOR.getCPtr(orientation), orientation));
  }

  public FMOD_RESULT get3DConeOrientation(FMOD_VECTOR orientation) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DConeOrientation(swigCPtr, this, FMOD_VECTOR.getCPtr(orientation), orientation));
  }

  public FMOD_RESULT set3DCustomRolloff(FMOD_VECTOR points, int numpoints) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DCustomRolloff(swigCPtr, this, FMOD_VECTOR.getCPtr(points), points, numpoints));
  }

  public FMOD_RESULT get3DCustomRolloff(SWIGTYPE_p_p_FMOD_VECTOR points, SWIGTYPE_p_int numpoints) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DCustomRolloff(swigCPtr, this, SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(points), SWIGTYPE_p_int.getCPtr(numpoints)));
  }

  public FMOD_RESULT set3DOcclusion(float directocclusion, float reverbocclusion) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DOcclusion(swigCPtr, this, directocclusion, reverbocclusion));
  }

  public FMOD_RESULT get3DOcclusion(SWIGTYPE_p_float directocclusion, SWIGTYPE_p_float reverbocclusion) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DOcclusion(swigCPtr, this, SWIGTYPE_p_float.getCPtr(directocclusion), SWIGTYPE_p_float.getCPtr(reverbocclusion)));
  }

  public FMOD_RESULT set3DSpread(float angle) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DSpread(swigCPtr, this, angle));
  }

  public FMOD_RESULT get3DSpread(SWIGTYPE_p_float angle) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DSpread(swigCPtr, this, SWIGTYPE_p_float.getCPtr(angle)));
  }

  public FMOD_RESULT set3DLevel(float level) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DLevel(swigCPtr, this, level));
  }

  public FMOD_RESULT get3DLevel(SWIGTYPE_p_float level) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DLevel(swigCPtr, this, SWIGTYPE_p_float.getCPtr(level)));
  }

  public FMOD_RESULT set3DDopplerLevel(float level) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DDopplerLevel(swigCPtr, this, level));
  }

  public FMOD_RESULT get3DDopplerLevel(SWIGTYPE_p_float level) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DDopplerLevel(swigCPtr, this, SWIGTYPE_p_float.getCPtr(level)));
  }

  public FMOD_RESULT set3DDistanceFilter(boolean custom, float customLevel, float centerFreq) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_set3DDistanceFilter(swigCPtr, this, custom, customLevel, centerFreq));
  }

  public FMOD_RESULT get3DDistanceFilter(SWIGTYPE_p_bool custom, SWIGTYPE_p_float customLevel, SWIGTYPE_p_float centerFreq) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_get3DDistanceFilter(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(custom), SWIGTYPE_p_float.getCPtr(customLevel), SWIGTYPE_p_float.getCPtr(centerFreq)));
  }

  public FMOD_RESULT setUserData(SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_setUserData(swigCPtr, this, SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public FMOD_RESULT getUserData(SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.ChannelControl_getUserData(swigCPtr, this, SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

}
