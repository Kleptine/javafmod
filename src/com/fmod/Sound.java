/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.fmod;

public class Sound {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Sound(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Sound obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javafmodJNI.delete_Sound(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

	/** This constructor creates the proxy which initially does not create nor own any C memory */
	public Sound() {
		this(0, false);
	}

  public FMOD_RESULT release() {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_release(swigCPtr, this));
  }

  public FMOD_RESULT getSystemObject(FMOD_System system) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getSystemObject(swigCPtr, this, system));
  }

  public FMOD_RESULT lock(long offset, long length, SWIGTYPE_p_p_void ptr1, SWIGTYPE_p_p_void ptr2, SWIGTYPE_p_unsigned_int len1, SWIGTYPE_p_unsigned_int len2) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_lock(swigCPtr, this, offset, length, SWIGTYPE_p_p_void.getCPtr(ptr1), SWIGTYPE_p_p_void.getCPtr(ptr2), SWIGTYPE_p_unsigned_int.getCPtr(len1), SWIGTYPE_p_unsigned_int.getCPtr(len2)));
  }

  public FMOD_RESULT unlock(SWIGTYPE_p_void ptr1, SWIGTYPE_p_void ptr2, long len1, long len2) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_unlock(swigCPtr, this, SWIGTYPE_p_void.getCPtr(ptr1), SWIGTYPE_p_void.getCPtr(ptr2), len1, len2));
  }

  public FMOD_RESULT setDefaults(float frequency, int priority) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setDefaults(swigCPtr, this, frequency, priority));
  }

  public FMOD_RESULT getDefaults(SWIGTYPE_p_float frequency, SWIGTYPE_p_int priority) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getDefaults(swigCPtr, this, SWIGTYPE_p_float.getCPtr(frequency), SWIGTYPE_p_int.getCPtr(priority)));
  }

  public FMOD_RESULT set3DMinMaxDistance(float min, float max) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_set3DMinMaxDistance(swigCPtr, this, min, max));
  }

  public FMOD_RESULT get3DMinMaxDistance(SWIGTYPE_p_float min, SWIGTYPE_p_float max) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_get3DMinMaxDistance(swigCPtr, this, SWIGTYPE_p_float.getCPtr(min), SWIGTYPE_p_float.getCPtr(max)));
  }

  public FMOD_RESULT set3DConeSettings(float insideconeangle, float outsideconeangle, float outsidevolume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_set3DConeSettings(swigCPtr, this, insideconeangle, outsideconeangle, outsidevolume));
  }

  public FMOD_RESULT get3DConeSettings(SWIGTYPE_p_float insideconeangle, SWIGTYPE_p_float outsideconeangle, SWIGTYPE_p_float outsidevolume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_get3DConeSettings(swigCPtr, this, SWIGTYPE_p_float.getCPtr(insideconeangle), SWIGTYPE_p_float.getCPtr(outsideconeangle), SWIGTYPE_p_float.getCPtr(outsidevolume)));
  }

  public FMOD_RESULT set3DCustomRolloff(FMOD_VECTOR points, int numpoints) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_set3DCustomRolloff(swigCPtr, this, FMOD_VECTOR.getCPtr(points), points, numpoints));
  }

  public FMOD_RESULT get3DCustomRolloff(SWIGTYPE_p_p_FMOD_VECTOR points, SWIGTYPE_p_int numpoints) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_get3DCustomRolloff(swigCPtr, this, SWIGTYPE_p_p_FMOD_VECTOR.getCPtr(points), SWIGTYPE_p_int.getCPtr(numpoints)));
  }

  public FMOD_RESULT setSubSound(int index, Sound subsound) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setSubSound(swigCPtr, this, index, Sound.getCPtr(subsound), subsound));
  }

  public FMOD_RESULT getSubSound(int index, Sound subsound) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getSubSound(swigCPtr, this, index, subsound));
  }

  public FMOD_RESULT getSubSoundParent(Sound parentsound) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getSubSoundParent(swigCPtr, this, parentsound));
  }

  public FMOD_RESULT getName(String name, int namelen) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getName(swigCPtr, this, name, namelen));
  }

  public FMOD_RESULT getLength(SWIGTYPE_p_unsigned_int length, long lengthtype) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getLength(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(length), lengthtype));
  }

  public FMOD_RESULT getFormat(SWIGTYPE_p_FMOD_SOUND_TYPE type, SWIGTYPE_p_FMOD_SOUND_FORMAT format, SWIGTYPE_p_int channels, SWIGTYPE_p_int bits) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getFormat(swigCPtr, this, SWIGTYPE_p_FMOD_SOUND_TYPE.getCPtr(type), SWIGTYPE_p_FMOD_SOUND_FORMAT.getCPtr(format), SWIGTYPE_p_int.getCPtr(channels), SWIGTYPE_p_int.getCPtr(bits)));
  }

  public FMOD_RESULT getNumSubSounds(SWIGTYPE_p_int numsubsounds) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getNumSubSounds(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numsubsounds)));
  }

  public FMOD_RESULT getNumTags(SWIGTYPE_p_int numtags, SWIGTYPE_p_int numtagsupdated) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getNumTags(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numtags), SWIGTYPE_p_int.getCPtr(numtagsupdated)));
  }

  public FMOD_RESULT getTag(String name, int index, FMOD_TAG tag) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getTag(swigCPtr, this, name, index, FMOD_TAG.getCPtr(tag), tag));
  }

  public FMOD_RESULT getOpenState(SWIGTYPE_p_FMOD_OPENSTATE openstate, SWIGTYPE_p_unsigned_int percentbuffered, SWIGTYPE_p_bool starving, SWIGTYPE_p_bool diskbusy) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getOpenState(swigCPtr, this, SWIGTYPE_p_FMOD_OPENSTATE.getCPtr(openstate), SWIGTYPE_p_unsigned_int.getCPtr(percentbuffered), SWIGTYPE_p_bool.getCPtr(starving), SWIGTYPE_p_bool.getCPtr(diskbusy)));
  }

  public FMOD_RESULT readData(SWIGTYPE_p_void buffer, long lenbytes, SWIGTYPE_p_unsigned_int read) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_readData(swigCPtr, this, SWIGTYPE_p_void.getCPtr(buffer), lenbytes, SWIGTYPE_p_unsigned_int.getCPtr(read)));
  }

  public FMOD_RESULT seekData(long pcm) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_seekData(swigCPtr, this, pcm));
  }

  public FMOD_RESULT setSoundGroup(SoundGroup soundgroup) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setSoundGroup(swigCPtr, this, SoundGroup.getCPtr(soundgroup), soundgroup));
  }

  public FMOD_RESULT getSoundGroup(SoundGroup soundgroup) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getSoundGroup(swigCPtr, this, soundgroup));
  }

  public FMOD_RESULT getNumSyncPoints(SWIGTYPE_p_int numsyncpoints) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getNumSyncPoints(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numsyncpoints)));
  }

  public FMOD_RESULT getSyncPoint(int index, SWIGTYPE_p_p_FMOD_SYNCPOINT point) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getSyncPoint(swigCPtr, this, index, SWIGTYPE_p_p_FMOD_SYNCPOINT.getCPtr(point)));
  }

  public FMOD_RESULT getSyncPointInfo(SWIGTYPE_p_FMOD_SYNCPOINT point, String name, int namelen, SWIGTYPE_p_unsigned_int offset, long offsettype) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getSyncPointInfo(swigCPtr, this, SWIGTYPE_p_FMOD_SYNCPOINT.getCPtr(point), name, namelen, SWIGTYPE_p_unsigned_int.getCPtr(offset), offsettype));
  }

  public FMOD_RESULT addSyncPoint(long offset, long offsettype, String name, SWIGTYPE_p_p_FMOD_SYNCPOINT point) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_addSyncPoint(swigCPtr, this, offset, offsettype, name, SWIGTYPE_p_p_FMOD_SYNCPOINT.getCPtr(point)));
  }

  public FMOD_RESULT deleteSyncPoint(SWIGTYPE_p_FMOD_SYNCPOINT point) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_deleteSyncPoint(swigCPtr, this, SWIGTYPE_p_FMOD_SYNCPOINT.getCPtr(point)));
  }

  public FMOD_RESULT setMode(long mode) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setMode(swigCPtr, this, mode));
  }

  public FMOD_RESULT getMode(SWIGTYPE_p_unsigned_int mode) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getMode(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(mode)));
  }

  public FMOD_RESULT setLoopCount(int loopcount) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setLoopCount(swigCPtr, this, loopcount));
  }

  public FMOD_RESULT getLoopCount(SWIGTYPE_p_int loopcount) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getLoopCount(swigCPtr, this, SWIGTYPE_p_int.getCPtr(loopcount)));
  }

  public FMOD_RESULT setLoopPoints(long loopstart, long loopstarttype, long loopend, long loopendtype) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setLoopPoints(swigCPtr, this, loopstart, loopstarttype, loopend, loopendtype));
  }

  public FMOD_RESULT getLoopPoints(SWIGTYPE_p_unsigned_int loopstart, long loopstarttype, SWIGTYPE_p_unsigned_int loopend, long loopendtype) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getLoopPoints(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(loopstart), loopstarttype, SWIGTYPE_p_unsigned_int.getCPtr(loopend), loopendtype));
  }

  public FMOD_RESULT getMusicNumChannels(SWIGTYPE_p_int numchannels) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getMusicNumChannels(swigCPtr, this, SWIGTYPE_p_int.getCPtr(numchannels)));
  }

  public FMOD_RESULT setMusicChannelVolume(int channel, float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setMusicChannelVolume(swigCPtr, this, channel, volume));
  }

  public FMOD_RESULT getMusicChannelVolume(int channel, SWIGTYPE_p_float volume) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getMusicChannelVolume(swigCPtr, this, channel, SWIGTYPE_p_float.getCPtr(volume)));
  }

  public FMOD_RESULT setMusicSpeed(float speed) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setMusicSpeed(swigCPtr, this, speed));
  }

  public FMOD_RESULT getMusicSpeed(SWIGTYPE_p_float speed) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getMusicSpeed(swigCPtr, this, SWIGTYPE_p_float.getCPtr(speed)));
  }

  public FMOD_RESULT setUserData(SWIGTYPE_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_setUserData(swigCPtr, this, SWIGTYPE_p_void.getCPtr(userdata)));
  }

  public FMOD_RESULT getUserData(SWIGTYPE_p_p_void userdata) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Sound_getUserData(swigCPtr, this, SWIGTYPE_p_p_void.getCPtr(userdata)));
  }

}
