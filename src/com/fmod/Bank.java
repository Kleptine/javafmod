/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.fmod;

public class Bank {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Bank(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Bank obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javafmodJNI.delete_Bank(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

	/** This constructor creates the proxy which initially does not create nor own any C memory */
	public Bank() {
		this(0, false);
	}

  public boolean isValid() {
    return javafmodJNI.Bank_isValid(swigCPtr, this);
  }

  public FMOD_RESULT getID(FMOD_GUID id) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getID(swigCPtr, this, FMOD_GUID.getCPtr(id), id));
  }

  public FMOD_RESULT getPath(String path, int size, SWIGTYPE_p_int retrieved) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getPath(swigCPtr, this, path, size, SWIGTYPE_p_int.getCPtr(retrieved)));
  }

  public FMOD_RESULT unload() {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_unload(swigCPtr, this));
  }

  public FMOD_RESULT loadSampleData() {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_loadSampleData(swigCPtr, this));
  }

  public FMOD_RESULT unloadSampleData() {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_unloadSampleData(swigCPtr, this));
  }

  public FMOD_RESULT getLoadingState(SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE state) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getLoadingState(swigCPtr, this, SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE.getCPtr(state)));
  }

  public FMOD_RESULT getSampleLoadingState(SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE state) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getSampleLoadingState(swigCPtr, this, SWIGTYPE_p_FMOD_STUDIO_LOADING_STATE.getCPtr(state)));
  }

  public FMOD_RESULT getStringCount(SWIGTYPE_p_int count) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getStringCount(swigCPtr, this, SWIGTYPE_p_int.getCPtr(count)));
  }

  public FMOD_RESULT getStringInfo(int index, FMOD_GUID id, String path, int size, SWIGTYPE_p_int retrieved) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getStringInfo(swigCPtr, this, index, FMOD_GUID.getCPtr(id), id, path, size, SWIGTYPE_p_int.getCPtr(retrieved)));
  }

  public FMOD_RESULT getEventCount(SWIGTYPE_p_int count) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getEventCount(swigCPtr, this, SWIGTYPE_p_int.getCPtr(count)));
  }

  public FMOD_RESULT getEventList(EventDescription array, int capacity, SWIGTYPE_p_int count) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getEventList(swigCPtr, this, array, capacity, SWIGTYPE_p_int.getCPtr(count)));
  }

  public FMOD_RESULT getBusCount(SWIGTYPE_p_int count) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getBusCount(swigCPtr, this, SWIGTYPE_p_int.getCPtr(count)));
  }

  public FMOD_RESULT getBusList(SWIGTYPE_p_p_FMOD__Studio__Bus array, int capacity, SWIGTYPE_p_int count) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getBusList(swigCPtr, this, SWIGTYPE_p_p_FMOD__Studio__Bus.getCPtr(array), capacity, SWIGTYPE_p_int.getCPtr(count)));
  }

  public FMOD_RESULT getVCACount(SWIGTYPE_p_int count) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getVCACount(swigCPtr, this, SWIGTYPE_p_int.getCPtr(count)));
  }

  public FMOD_RESULT getVCAList(SWIGTYPE_p_p_FMOD__Studio__VCA array, int capacity, SWIGTYPE_p_int count) {
    return FMOD_RESULT.swigToEnum(javafmodJNI.Bank_getVCAList(swigCPtr, this, SWIGTYPE_p_p_FMOD__Studio__VCA.getCPtr(array), capacity, SWIGTYPE_p_int.getCPtr(count)));
  }

}
